<!doctype html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <title>OCS - Leaderboard</title>
  <% include partials/head %>
</head>

<body>
  <div>
    <div id="backgroundDiv"></div>
    <% include partials/header %>

      <div class="container body-content">
        <div class="updiv row hidden-xs text-center">
          <h1 class="title">OoT Championship Series - Winner S1 - The Bingo God Exodus</h1>
        </div>
        <div class="updiv row hidden-xs text-center">
          <h1 class="title">OoT Championship Series - S1 - Playoff</h1>
        </div>
        <div class="updiv row">
          <div>
            <table class="table table-bordered table-responsive table-striped">
              <thead>
                <tr class="table-header">
                  <th>Exodus</th>
                  <th>Sniping</th>
                  <th>Marco</th>
                  <th>Hyperion64</th>
                  <th>Tob3000</th>
                </tr>
              </thead>
              <tbody>
                <tr>
                  <td class="brightness"><img style="display: block; margin-left:auto; margin-right:auto;" src="images/PlayersIcone/exodus.png"
                      class="img-responsive" alt="exodus.png"></td>
                  <td><img style="display: block; margin-left:auto; margin-right:auto;" src="images/PlayersIcone/sniping.png"
                      class="img-responsive greyimg" alt="sniping.png"></td>
                  <td><img style="display: block; margin-left:auto; margin-right:auto;" src="images/PlayersIcone/Marco.jpeg"
                      class="img-responsive greyimg" alt="Marco.jpeg"></td>
                  <td><img style="display: block; margin-left:auto; margin-right:auto;" src="images/PlayersIcone/hyperion64.png"
                      class="img-responsive greyimg" alt="hyperion64.png"></td>
                  <td><img style="display: block; margin-left:auto; margin-right:auto;" src="images/PlayersIcone/Tob3000.png"
                      class="img-responsive greyimg" alt="Tob3000.png"></td>
                </tr>
              </tbody>
            </table>
          </div>
        </div>
        <div class="updiv row hidden-xs text-center">
          <h1 class="title">OoT Championship Series - S1 - Leaderboard</h1>
        </div>
        <div class="updiv row">
          <div>
            <table class="table table-bordered table-responsive table-striped">
              <thead>
                <tr class="table-header">
                  <th onclick="sort_table(people, 0, asc1, true); asc1 *= -1; asc2 = 1; asc3 = 1; asc4 = 1; asc5 = 1;">Rank<span class="glyphicon glyphicon-sort pull-right" aria-hidden="true"></span></th>
                  <th onclick="sort_table(people, 1, asc2, false); asc2 *= -1; asc3 = 1; asc1 = 1; asc4 = 1; asc5 = 1;">Player<span class="glyphicon glyphicon-sort pull-right" aria-hidden="true"></span></th>
                  <th onclick="sort_table(people, 2, asc3, false); asc3 *= -1; asc1 = 1; asc2 = 1; asc4 = 1; asc5 = 1;" class="hidden-xs">Country <span class="glyphicon glyphicon-sort pull-right" aria-hidden="true"></span></th>
                  <th onclick="sort_table(people, 3, asc4, true); asc4 *= -1; asc1 = 1; asc2 = 1; asc3 = 1; asc5 = 1;">Score<span class="glyphicon glyphicon-sort pull-right" aria-hidden="true"></span></th>
                  <th onclick="sort_table(people, 4, asc5, true); asc5 *= -1; asc1 = 1; asc2 = 1; asc4 = 1; asc3 = 1;" class="hidden-xs"># of Races<span class="glyphicon glyphicon-sort pull-right" aria-hidden="true"></span></th>
                </tr>
              </thead>
              <tbody id="ScoresboardTable">

              </tbody>
            </table>
          </div>
        </div>
      </div>
  </div>
</body>
<script>
  var people,
    asc1 = 1,
    asc2 = 1,
    asc3 = 1,
    asc4 = 1,
    asc5 = 1;

  $.ajax({
    type: 'GET',
    url: "http://www.ootchampionship.com/scoresboard/scoresboard.xml",
    dataType: "xml"
  }).done(function (data) {

    $(data).find('Scoresboard').each(function () {
      var Scoretable = $(this).find("Score");
      $(this).find("Score").sort(function (a, b) {
        return parseFloat(b.PScore) - parseFloat(a.PScore);
      });

      var cpt = 0;
      while (cpt < Scoretable.length) {
        $('#ScoresboardTable').append("<tr><td><b>" + (Scoretable[cpt].getElementsByTagName("Rank")[0].innerHTML) + '</b></td><th><a target="_blank" href="' + Scoretable[cpt].getElementsByTagName("Twitch")[0].innerHTML + '">' + Scoretable[cpt].getElementsByTagName("Player")[0].innerHTML + '</a></th><td class="hidden-xs"><b>' + Scoretable[cpt].getElementsByTagName("Country")[0].innerHTML + "</b></td><td><b>" + Scoretable[cpt].getElementsByTagName("PScore")[0].innerHTML + '</b></td><td class="hidden-xs"><b>' + Scoretable[cpt].getElementsByTagName("NRace")[0].innerHTML + "</b></td></tr>");
        cpt++;
      }
      people = document.getElementById("ScoresboardTable");
      sort_table(people, 0, asc1, true);
    });

  }).fail(function (jqXHR, textStatus, errorThrown) { });


  function sort_table(tbody, col, asc, number) {
    var rows = tbody.rows,
      rlen = rows.length,
      arr = new Array(),
      i, j, cells, clen;
    // fill the array with values from the table
    for (i = 0; i < rlen; i++) {
      cells = rows[i].cells;
      clen = cells.length;
      arr[i] = new Array();
      for (j = 0; j < clen; j++) {
        arr[i][j] = cells[j].innerText;
      }
    }
    if (!number) {
      // sort the array by the specified column number (col) and order (asc)
      arr.sort(function (a, b) {
        return (a[col] == b[col]) ? 0 : ((a[col] > b[col]) ? asc : -1 * asc);
      });
    }
    else {
      // sort the array by the specified column number (col) and order (asc)
      arr.sort(function (a, b) {
        return (parseInt(a[col]) == parseInt(b[col])) ? 0 : ((parseInt(a[col]) > parseInt(b[col])) ? asc : -1 * asc);
      });
    }

    var myMap = new Map();

    for (cpt = 0; cpt < rlen; cpt++) {
      for (v = 0; v < rlen; v++) {
        if (rows[cpt].cells[1].innerText === arr[v][1]) {
          var temp = rows[cpt].cells[1].innerHTML
          myMap.set(v, temp);
        }
      }
    }
    // replace existing rows with new rows created from the sorted array
    for (i = 0; i < rlen; i++) {
      rows[i].innerHTML = "<td><b>" + arr[i][0] + '</b></td><th>' + myMap.get(i) + '</th><td class="hidden-xs"><b>' + arr[i][2] + "</b></td><td><b>" + arr[i][3] + '</b></td><td class="hidden-xs"><b>' + arr[i][4] + "</b></td>";
    }
  }

</script>

</html>
